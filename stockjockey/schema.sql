DROP TABLE IF EXISTS user_asset_relation;
DROP TABLE IF EXISTS asset_meta;
DROP TABLE IF EXISTS asset_metric;
DROP TABLE IF EXISTS asset;
DROP TABLE IF EXISTS user_insight;
DROP TABLE IF EXISTS user_meta;

CREATE TABLE user_meta (
  id SERIAL PRIMARY KEY,
  username TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL,
  email VARCHAR(255) UNIQUE NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  deleted TIMESTAMP DEFAULT NULL
);

CREATE OR REPLACE FUNCTION validate_email()
  RETURNS TRIGGER AS $$
BEGIN
  IF NEW.email NOT LIKE '%_@_%._%' THEN
    RAISE EXCEPTION '% is not a valid email address', NEW.email;
  END IF;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER tr_validate_email
  BEFORE INSERT ON user_meta
  FOR EACH ROW
  EXECUTE FUNCTION validate_email();

CREATE OR REPLACE FUNCTION update_user_timestamp()
  RETURNS TRIGGER AS $$
BEGIN
  UPDATE user_meta SET updated = CURRENT_TIMESTAMP WHERE id = NEW.id;
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER tr_user_update
  AFTER UPDATE ON user_meta
  FOR EACH ROW
  EXECUTE FUNCTION update_user_timestamp();

CREATE TABLE user_insight (
  user_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  deleted TIMESTAMP DEFAULT NULL,
  FOREIGN KEY (user_id) REFERENCES user_meta (id)
);

CREATE TABLE asset (
  id SERIAL PRIMARY KEY,
  name TEXT,
  ticker TEXT UNIQUE NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  deleted TIMESTAMP DEFAULT NULL
);

CREATE TABLE asset_metric (
  asset_id INTEGER NOT NULL,
  type TEXT NOT NULL,
  year INTEGER NOT NULL,
  quarter SMALLINT,
  value REAL NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  deleted TIMESTAMP DEFAULT NULL,
  FOREIGN KEY (asset_id) REFERENCES asset (id)
);

CREATE TABLE asset_meta (
  asset_id INTEGER NOT NULL,
  exchange TEXT NOT NULL,
  sector TEXT NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  deleted TIMESTAMP DEFAULT NULL,
  FOREIGN KEY (asset_id) REFERENCES asset (id)
);

CREATE TABLE user_asset_relation (
  user_id INTEGER NOT NULL,
  asset_id INTEGER NOT NULL,
  created TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  deleted TIMESTAMP DEFAULT NULL,
  FOREIGN KEY (user_id) REFERENCES user_meta (id),
  FOREIGN KEY (asset_id) REFERENCES asset (id)
);
